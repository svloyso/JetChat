# Routes

GET         /webSocket                                                   controllers.Application.webSocket(login: String)
GET         /json/user                                                   controllers.Application.getUser(login: String)
GET         /json/state                                                  controllers.Application.getInitialState(userId: Long, groupId: Option[Long], topicId: Option[Long], integrationId: Option[String], integrationTopicGroupId: Option[String], integrationTopicId: Option[String])
GET         /json/user/:userId/users                                     controllers.Application.getUsers(userId: Long)
GET         /json/user/:userId/groups                                    controllers.Application.getGroups(userId: Long, query: Option[String])
GET         /json/user/:userId/topics                                    controllers.Application.getAllTopics(userId: Long, query: Option[String])
GET         /json/user/:userId/topics/:groupId                           controllers.Application.getGroupTopics(userId: Long, groupId: Long, query: Option[String])
GET         /json/user/:userId/messages/:topicId                         controllers.Application.getMessages(userId: Long, topicId: Long, query: Option[String])

GET         /json/user/:userId/integration/groups                        controllers.Application.getIntegrationGroups(userId: Long, query: Option[String])
GET         /json/user/:userId/integration/topics                        controllers.Application.getAllIntegrationTopics(userId: Long, query: Option[String])
GET         /json/user/:userId/integration/:integrationId/topics         controllers.Application.getIntegrationGroupTopics(userId: Long, integrationId:String, groupId: Option[String], query: Option[String])
GET         /json/user/:userId/integration/:integrationId/messages       controllers.Application.getIntegrationMessages(userId: Long, integrationId: String, integrationGroupId: String, integrationTopicId: String, query: Option[String])

GET         /json/user/:fromUserId/direct/:toUserId                      controllers.Application.getDirectMessages(fromUserId: Long, toUserId: Long, query: Option[String])

POST        /json/topic/add                                              controllers.Application.addTopic
POST        /json/comment/add                                            controllers.Application.addComment
POST        /json/group/add                                              controllers.Application.addGroup
POST        /json/direct/add                                             controllers.Application.addDirectMessage

POST        /json/markAsRead                                             controllers.Application.markAsRead

GET         /logout                                                      controllers.Application.logout

GET         /auth/callback                                               controllers.Auth.callback(code: Option[String], state: Option[String])

GET         /assets/*file                                                controllers.Assets.at(path="/public", file)

GET         /                                                            controllers.Application.index(state: Option[String], groupId: Option[Long], topicId: Option[Long], userTopicId: Option[Long], userId: Option[Long], integrationId: Option[String], integrationGroupId: Option[String], integrationTopicGroupId: Option[String], integrationTopicId: Option[String], query: Option[String])

GET         /httpHeaders                                                 controllers.Application.httpHeaders
GET         /config                                                      controllers.Application.config

# Integration Auth
GET         /integration/:id/logout                                      controllers.IntegrationAuth.logout(id: String, discardUserCookie: Boolean ?= false)
GET         /integration/:id/auth                                        controllers.IntegrationAuth.auth(id: String, redirectUrl: Option[String])
GET         /integration/:id/enable                                      controllers.IntegrationAuth.enable(id: String, redirectUrl: Option[String])
GET         /integration/:id/disable                                     controllers.IntegrationAuth.disable(id: String)
GET         /integration/:id/callback                                    controllers.IntegrationAuth.callback(id: String, code: Option[String], state: Option[String], redirectUrl: Option[String])
POST        /integration/:id/comment                                     controllers.Application.addIntegrationComment(id: String)

# Integration Hook
POST        /integration/:id/hook                                        controllers.IntegrationHook.hook(id: String)